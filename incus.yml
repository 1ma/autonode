#cloud-config

hostname: autonode

locale: en_US.UTF-8

apt:
  sources:
    caddy:
      source: "deb https://dl.cloudsmith.io/public/caddy/stable/deb/debian any-version main"
      keyid: 6576 0C51 EDEA 2017 CEA2  CA15 155B 6D79 CA56 EA34
    nodejs:
      source: "deb https://deb.nodesource.com/node_20.x nodistro main"
      keyid: 6F71 F525 2828 41EE DAF8  51B4 2F59 B5F9 9B1B E0B4
    redis:
      source: "deb https://packages.redis.io/deb bookworm main"
      keyid: 5431 8FA4 052D 1E61 A6B6  F7BB 5F43 49D6 BF53 AA0C
    tor:
      source: "deb https://deb.torproject.org/torproject.org bookworm main"
      keyid: A3C4 F0F9 79CA A22C DBA8  F512 EE8C BC9E 886D DD89

package_update: true
package_upgrade: true

packages:
  - bash-completion
  - build-essential
  - caddy
  - curl
  - deb.torproject.org-keyring
  - git
  - gnupg
  - htop
  - jq
  - less
  - man-db
  - mariadb-client
  - mariadb-server
  - nano
  - net-tools
  - netcat-openbsd
  - nftables
  - nodejs
  - python-is-python3
  - redis-server
  - redis-tools
  - tor
  - tree
  - unattended-upgrades

runcmd:
  - systemctl enable nftables.service redis-server.service
  - bash -x /var/autonode/knots/setup.sh
  - bash -x /var/autonode/fulcrum/setup.sh
  - bash -x /var/autonode/mempool/setup.sh

power_state:
  mode: reboot

write_files:
  - path: /etc/redis/redis.conf
    owner: redis:redis
    defer: true
    append: true
    permissions: '0640'
    content: |

      unixsocket /run/redis/redis.sock
      unixsocketperm 660
  - path: /etc/tor/torrc
    owner: root:root
    defer: true
    append: true
    permissions: '0644'
    content: |
      ControlPort 9051
      CookieAuthentication 1
      CookieAuthFileGroupReadable 1
  - path: /var/autonode/knots/setup.sh
    owner: root:root
    defer: true
    permissions: '0755'
    content: |
      #!/usr/bin/env bash
      set -euo pipefail

      export KNOTS_VERSION=27.1.knots20240801
      export KNOTS_MAJOR_VERSION=$(echo ${KNOTS_VERSION} | cut -c1-2)

      # TODO Download release and verify signatures instead of downloading directly from GitHub
      curl -s -o /etc/bash_completion.d/bitcoin-cli.bash https://raw.githubusercontent.com/bitcoinknots/bitcoin/v${KNOTS_VERSION}/contrib/completions/bash/bitcoin-cli.bash
      curl -s -o /etc/bash_completion.d/bitcoin-tx.bash  https://raw.githubusercontent.com/bitcoinknots/bitcoin/v${KNOTS_VERSION}/contrib/completions/bash/bitcoin-tx.bash
      curl -s -o /etc/bash_completion.d/bitcoind.bash    https://raw.githubusercontent.com/bitcoinknots/bitcoin/v${KNOTS_VERSION}/contrib/completions/bash/bitcoind.bash

      curl -s https://api.github.com/repos/bitcoinknots/guix.sigs/contents/builder-keys | jq -r '.[].download_url' | while read url; do curl -s "$url" | gpg --import; done

      cd /var/autonode/knots
      curl -LO https://bitcoinknots.org/files/${KNOTS_MAJOR_VERSION}.x/${KNOTS_VERSION}/SHA256SUMS
      curl -LO https://bitcoinknots.org/files/${KNOTS_MAJOR_VERSION}.x/${KNOTS_VERSION}/SHA256SUMS.asc
      curl -LO https://bitcoinknots.org/files/${KNOTS_MAJOR_VERSION}.x/${KNOTS_VERSION}/bitcoin-${KNOTS_VERSION}-x86_64-linux-gnu.tar.gz
      gpg --verify SHA256SUMS.asc SHA256SUMS
      sha256sum -c --ignore-missing SHA256SUMS

      tar zxf bitcoin-${KNOTS_VERSION}-x86_64-linux-gnu.tar.gz
      tree

      install -m 0755 -o root -g root -t /usr/local/bin bitcoin-${KNOTS_VERSION}/bin/bitcoin*
      install -m 0755 -o root -g root -t /usr/local/bin bitcoin-${KNOTS_VERSION}/share/rpcauth/rpcauth.py
      cp -r bitcoin-${KNOTS_VERSION}/share/man/man1 /usr/local/share/man/

      install -m 0644 -o root -g root -t /etc/systemd/system bitcoind.service

      groupadd -r bitcoin
      useradd -s /usr/sbin/nologin -r -G debian-tor -g bitcoin bitcoin

      mkdir -m 710 /var/lib/bitcoind
      chown bitcoin:bitcoin /var/lib/bitcoind

      mkdir -m 710 /etc/bitcoin
      chown bitcoin:bitcoin /etc/bitcoin
      install -m 0640 -o bitcoin -g bitcoin -t /etc/bitcoin bitcoin.conf

      systemctl enable bitcoind.service
  - path: /var/autonode/knots/bitcoin.conf
    owner: root:root
    defer: true
    permissions: '0644'
    content: |
      # initial block download settings (disable after IBD)
      blocksonly=1

      # network settings
      listen=1
      onlynet=ipv4
      onlynet=onion
      proxy=127.0.0.1:9050
      server=1
      whitelist=127.0.0.1

      # auth settings
      rpccookieperms=group

      # misc settings
      assumevalid=0
      datadir=/var/lib/bitcoind
      nodebuglogfile=1
      pid=/run/bitcoind/bitcoind.pid
      walletimplicitsegwit=1

      # bloom filter settings
      peerblockfilters=1
      peerbloomfilters=1

      # index settings
      blockfilterindex=basic
      coinstatsindex=1
      txindex=1

      # ZMQ settings
      zmqpubhashblock=tcp://127.0.0.1:8433
  - path: /var/autonode/knots/bitcoind.service
    owner: root:root
    defer: true
    permissions: '0644'
    content: |
      [Unit]
      Description=Bitcoin Knots daemon
      Documentation=https://github.com/bitcoinknots/bitcoin/blob/27.x-knots/doc/init.md

      After=network-online.target
      Wants=network-online.target

      [Service]
      ExecStart=/usr/local/bin/bitcoind -conf=/etc/bitcoin/bitcoin.conf \
                                        -startupnotify='systemd-notify --ready' \
                                        -shutdownnotify='systemd-notify --stopping'

      Type=notify
      NotifyAccess=all
      PIDFile=/run/bitcoind/bitcoind.pid

      Restart=on-failure
      TimeoutStartSec=infinity
      TimeoutStopSec=600

      User=bitcoin
      Group=bitcoin

      RuntimeDirectory=bitcoind
      RuntimeDirectoryMode=0710

      ConfigurationDirectory=bitcoin
      ConfigurationDirectoryMode=0710

      StateDirectory=bitcoind
      StateDirectoryMode=0710

      MemoryDenyWriteExecute=true
      NoNewPrivileges=true
      PrivateDevices=true
      PrivateTmp=true
      ProtectHome=true
      ProtectSystem=full
      SystemCallArchitectures=native

      [Install]
      WantedBy=multi-user.target
  - path: /var/autonode/fulcrum/setup.sh
    owner: root:root
    defer: true
    permissions: '0755'
    content: |
      #!/usr/bin/env bash
      set -euo pipefail

      export FULCRUM_VERSION=1.11.0

      curl -s https://raw.githubusercontent.com/Electron-Cash/keys-n-hashes/master/pubkeys/calinkey.txt | gpg --import

      cd /var/autonode/fulcrum
      curl -LO https://github.com/cculianu/Fulcrum/releases/download/v${FULCRUM_VERSION}/Fulcrum-${FULCRUM_VERSION}-shasums.txt
      curl -LO https://github.com/cculianu/Fulcrum/releases/download/v${FULCRUM_VERSION}/Fulcrum-${FULCRUM_VERSION}-shasums.txt.asc
      curl -LO https://github.com/cculianu/Fulcrum/releases/download/v${FULCRUM_VERSION}/Fulcrum-${FULCRUM_VERSION}-x86_64-linux.tar.gz
      gpg --verify Fulcrum-${FULCRUM_VERSION}-shasums.txt.asc Fulcrum-${FULCRUM_VERSION}-shasums.txt
      sha256sum -c --ignore-missing Fulcrum-${FULCRUM_VERSION}-shasums.txt

      tar zxf Fulcrum-${FULCRUM_VERSION}-x86_64-linux.tar.gz
      tree

      cp -r Fulcrum-${FULCRUM_VERSION}-x86_64-linux/Fulcrum* /usr/local/bin/
      cp -r Fulcrum-${FULCRUM_VERSION}-x86_64-linux/man/*    /usr/local/share/man/man1/

      groupadd -r fulcrum
      useradd -s /usr/sbin/nologin -r -G bitcoin -g fulcrum fulcrum

      mkdir -m 710 /var/lib/fulcrum
      chown fulcrum:fulcrum /var/lib/fulcrum

      mkdir -m 710 /etc/fulcrum
      chown fulcrum:fulcrum /etc/fulcrum
      install -m 0640 -o fulcrum -g fulcrum -t /etc/fulcrum fulcrum.conf

      install -m 0644 -o root -g root -t /etc/systemd/system fulcrum.service
      systemctl enable fulcrum.service
  - path: /var/autonode/fulcrum/fulcrum.conf
    owner: root:root
    defer: true
    permissions: '0644'
    content: |
      bitcoind = 127.0.0.1:8332
      rpccookie = /var/lib/bitcoind/.cookie

      admin = 8000
      pidfile = /run/fulcrum/fulcrum.pid

      ## Fulcrum server general settings
      datadir = /var/lib/fulcrum
      tcp = 127.0.0.1:50001
      peering = false

      # Set fast-sync according with your device,
      # recommended: fast-sync=1/2 x RAM available e.g: 4GB RAM -> dbcache=2048
      utxo-cache = 8196

      anon_logs = true
  - path: /var/autonode/fulcrum/fulcrum.service
    owner: root:root
    defer: true
    permissions: '0644'
    content: |
      [Unit]
      Description=Fulcrum daemon
      Documentation=https://github.com/cculianu/Fulcrum/blob/master/contrib/rpm/fulcrum.service

      After=network-online.target bitcoind.service
      Wants=network-online.target bitcoind.service

      [Service]
      ExecStart=/usr/local/bin/Fulcrum /etc/fulcrum/fulcrum.conf

      Type=exec
      LimitNOFILE=20000:32767

      Restart=on-failure
      TimeoutStartSec=infinity
      TimeoutStopSec=600

      User=fulcrum
      Group=fulcrum

      RuntimeDirectory=fulcrum
      RuntimeDirectoryMode=0710

      ConfigurationDirectory=fulcrum
      ConfigurationDirectoryMode=0710

      StateDirectory=fulcrum
      StateDirectoryMode=0710

      MemoryDenyWriteExecute=true
      NoNewPrivileges=true
      PrivateDevices=true
      PrivateTmp=true
      ProtectHome=true
      ProtectSystem=full
      SystemCallArchitectures=native

      [Install]
      WantedBy=multi-user.target
  - path: /var/autonode/mempool/setup.sh
    owner: root:root
    defer: true
    permissions: '0755'
    content: |
      #!/usr/bin/env bash
      set -euo pipefail

      export MEMPOOL_VERSION=v3.0.0

      curl -s https://github.com/wiz.gpg | gpg --import

      cd /var/autonode/mempool
      git clone --branch ${MEMPOOL_VERSION} --depth 1 https://github.com/mempool/mempool code

      cd ./code
      git verify-tag ${MEMPOOL_VERSION}

      set +x
      DB_USER_PASSWORD=$(openssl rand -hex 32)
      mysql -e "CREATE DATABASE mempool;"
      mysql -e "GRANT ALL PRIVILEGES ON mempool.* TO 'mempool'@'%' IDENTIFIED BY '${DB_USER_PASSWORD}';"
      set -x

      curl -s https://sh.rustup.rs | sh -s -- -y --default-toolchain $(cat ./rust/gbt/rust-toolchain)

      export HOME=/root
      source "$HOME/.cargo/env"

      cd ./backend

      curl -s -O https://gist.githubusercontent.com/1ma/3c5f403edcbe9132be4f0ba33623ebd8/raw/0ba538a149618c956ed6bba8f948eaab51f97be0/mempool-config-generator.js
      set +x
      node mempool-config-generator.js \
        CORE_RPC.COOKIE=true \
        CORE_RPC.COOKIE_PATH=/var/lib/bitcoind/.cookie \
        DATABASE.PASSWORD="${DB_USER_PASSWORD}" \
        DATABASE.SOCKET="/var/run/mysqld/mysqld.sock" \
        ELECTRUM.PORT=50001 \
        ELECTRUM.TLS_ENABLED=false \
        FIAT_PRICE.ENABLED=false \
        MEMPOOL.CACHE_ENABLED=false \
        REDIS.ENABLED=true \
        REDIS.UNIX_SOCKET_PATH=/run/redis/redis.sock \
        SYSLOG.ENABLED=false
      set -x

      npm install
      npm run build

      cd ../frontend
      node update-config.js \
        ACCELERATOR_BUTTON=false \
        ITEMS_PER_PAGE=25 \
        ROOT_NETWORK=mainnet
      node generate-config.js
      npm install
      npm run build

      groupadd -r mempool
      useradd -s /usr/sbin/nologin -r -G bitcoin,redis -g mempool mempool

      cd /var/autonode/mempool
      chown -R mempool:mempool code

      install -m 0644 -o root -g root -t /etc/caddy Caddyfile

      install -m 0644 -o root -g root -t /etc/systemd/system mempool-backend.service
      systemctl enable mempool-backend.service
  - path: /var/autonode/mempool/mempool-backend.service
    owner: root:root
    defer: true
    permissions: '0644'
    content: |
      [Unit]
      Description=Mempool Backend daemon

      After=network.target bitcoind.service fulcrum.service
      Wants=network.target bitcoind.service fulcrum.service

      [Service]
      Type=exec
      WorkingDirectory=/var/autonode/mempool/code/backend
      ExecStart=/usr/bin/npm run start

      User=mempool
      Group=mempool

      Restart=on-failure
      TimeoutStartSec=infinity
      TimeoutStopSec=600

      [Install]
      WantedBy=multi-user.target
  - path: /var/autonode/mempool/Caddyfile
    owner: root:root
    defer: true
    permissions: '0644'
    content: |
      :80 {
      	root /var/autonode/mempool/code/frontend/dist/mempool/browser

      	header Vary "Accept-Language, Cookie"

      	map {header.accept-language} {header_lang} {
      		default "en-US"
      		~^ar "ar"
      		~^cs "cs"
      		~^da "da"
      		~^de "de"
      		~^en "en-US"
      		~^es "es"
      		~^fa "fa"
      		~^fi "fi"
      		~^fr "fr"
      		~^he "he"
      		~^hi "hi"
      		~^hr "hr"
      		~^hu "hu"
      		~^it "it"
      		~^ja "ja"
      		~^ka "ka"
      		~^ko "ko"
      		~^lt "lt"
      		~^mk "mk"
      		~^nb "nb"
      		~^ne "ne"
      		~^nl "nl"
      		~^pl "pl"
      		~^pt "pt"
      		~^ro "ro"
      		~^ru "ru"
      		~^sl "sl"
      		~^sv "sv"
      		~^th "th"
      		~^tr "tr"
      		~^uk "uk"
      		~^vi "vi"
      		~^zh "zh"
      	}

      	map {cookie.lang} {lang} {
      		default {header_lang}
      		ar "ar"
      		cs "cs"
      		da "da"
      		de "de"
      		en "en-US"
      		es "es"
      		fa "fa"
      		fi "fi"
      		fr "fr"
      		he "he"
      		hi "hi"
      		hr "hr"
      		hu "hu"
      		it "it"
      		ja "ja"
      		ka "ka"
      		ko "ko"
      		lt "lt"
      		mk "mk"
      		nb "nb"
      		ne "ne"
      		nl "nl"
      		pl "pl"
      		pt "pt"
      		ro "ro"
      		ru "ru"
      		sl "sl"
      		sv "sv"
      		th "th"
      		tr "tr"
      		uk "uk"
      		vi "vi"
      		zh "zh"
      	}

      	route {
      		reverse_proxy /api/v1/* 127.0.0.1:8999
      		handle /api/* {
      			uri replace /api/ /api/v1/
      			reverse_proxy 127.0.0.1:8999
      		}

      		try_files {path} /{lang}/{path} /en-US/{path} /{lang}/index.html /en-US/index.html
      		file_server
      	}
      }
